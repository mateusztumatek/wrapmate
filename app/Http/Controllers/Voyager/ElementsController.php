<?php

namespace App\Http\Controllers\Voyager;

use App\Element;
use App\Helpers\Help;
use App\Page;
use App\Sign;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Validator;
use TCG\Voyager\Http\Controllers\VoyagerBaseController as BaseVoyagerBaseController;
use TCG\Voyager\Models\Menu;
use TCG\Voyager\Models\MenuItem;

class ElementsController extends BaseVoyagerBaseController
{
    public function index(Request $request)
    {
        return parent::index($request); // TODO: Change the autogenerated stub
    }
    public function store(Request $request)
    {
        $to_return = parent::store($request); // TODO: Change the autogenerated stub
        $model = Element::latest()->first();
        if($request->signs){
            $old = $model->signs;
            foreach ($request->signs as $sign){
                $val = Validator::make($sign, [
                    'price' => 'required|min:0',
                    'sign' => 'required',
                ]);
                if($val->fails()) return back()->withErrors(['Musisz wypełnić pola w znakowaniach']);
            }
            foreach ($old as $elem){
                $check = false;
                foreach ($request->signs as $sign){
                    if(array_key_exists('id', $sign) && $elem->id == $sign['id']) $check = true;
                }
                if(!$check) $elem->delete();
            }
            foreach ($request->signs as $sign){
                if(array_key_exists('id', $sign)){
                    Sign::where('id', $sign['id'])->update($sign);
                }else{
                    $model->signs()->create($sign);
                }
            }
        }else{
            Sign::where('element_id', $id)->delete();
        }

        return $to_return;
    }
    public function edit(Request $request, $id)
    {

        return parent::edit($request, $id); // TODO: Change the autogenerated stub
    }
    public function update(Request $request, $id)
    {
        $model = Element::find($id);
        if($request->signs){
            $old = $model->signs;
            foreach ($request->signs as $sign){
                $val = Validator::make($sign, [
                    'price' => 'required|min:0',
                    'sign' => 'required',
                ]);
                if($val->fails()) return back()->withErrors(['Musisz wypełnić pola w znakowaniach']);
            }
            foreach ($old as $elem){
                $check = false;
                foreach ($request->signs as $sign){
                    if(array_key_exists('id', $sign) && $elem->id == $sign['id']) $check = true;
                }
                if(!$check) $elem->delete();
            }
            foreach ($request->signs as $sign){
                if(array_key_exists('id', $sign)){
                    Sign::where('id', $sign['id'])->update($sign);
                }else{
                    $model->signs()->create($sign);
                }
            }
        }else{
            Sign::where('element_id', $id)->delete();
        }

        return parent::update($request, $id); // TODO: Change the autogenerated stub
    }
}
